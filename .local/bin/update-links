#!/bin/bash
# set -ex
usage() {
cat << END

update-links [-s] [-c] [-b] [-d <[s|sc|script]|[c|cf|config]|[b|both]>]

Options:
-s          ------------- Only update scripts(~/.local/bin)
-c          ------------- Only update configs(~/[.config/**]
-b          ------------- Update both configs and scripts
-d <arg>    ------------- Dry run. args could be one of 'config','script', 'both' or their short forms

<arg>:
s|sc|script ------------- Only dry run scripts
c|cf|config ------------- Only dry run configs
b|both      ------------- Dry run all
END
exit 1;
}
#Put the full path if the dotfile directory
dotdir=~/packages/repos/crice
#This scripst only deals with scripts/configs in $HOME,$HOME/.config/** and $HOME/.local/bin
#The path to the dotdir configs/scripts would usually be like $HOME/path/to/dotdir/{.local,.config}
#And you would want it symlinked to $HOME/{.config/.local}
#So the excess path in in the first would be the pattern you would want to remove.
#The path to the files in dotdir is substituted with ${1/$pattern} for the placement of the symlink.
#So the  pattern to remove would be:
#pattern="/path/to/dotdir"
pattern="/packages/repos/crice"
reject=()
[ $# -eq 0 ] && usage
cd $dotdir
while getopts ':d:acsu' opt
do
    case "$opt" in
        a) all=1;;
        c) config=1;;
        s) script=1;;
        d) option="${OPTARG}"
          dry=1
          case "$option" in
              c|cf|config) dryconfig=1;;
              s|sc|script) dryscript=1;;
              a|all) dryall=1;;
              *) echo "Invalid argument: ${OPTARG}";usage;;
          esac
          ;;
        u) usage ;;
        *) echo "Invalid option: -${OPTARG}";usage;;
    esac
done
shift $((OPTIND-1))

rejected() {
          rejectfile=./.rejected.$1
          [  -f $rejectfile ] && mv $rejectfile $rejectfile.old
          echo -e "\t${1~~} ------- $(date)\n" >> $rejectfile
          echo "${reject[@]}" | tr ' ' '\n' >> $rejectfile
          echo "Some files are rejected: Check rejected.$1"
 }

update() {
        m=${1/$pattern};
        (( dry )) && { echo "dry run: ln -s $1 $m" &&  return; }
        if ! [ -f $m ]; then
            echo "this is inside if"
            ln -s $1 $m
            return
        fi
        unlink $m || rm $m ||  reject+=( "$m" ) && return;
        echo "this is outside if"
        ln -s $1 $m;
    }

if (( script || all || dryall || dryscript )) ;then
    for i in $(fd . ~/packages/repos/crice/.local/bin --type f); do
        update "${i}"
    done
   [ ${#reject[@]} -gt 0 ] && rejected "scripts"
fi

unset reject
if (( config || all || dryall || dryconfig )); then
    for j in $(fd . ~/packages/repos/crice --type f --hidden --exclude .local/bin --exclude .git --exclude .rejected*); do
        update "${j}"
    done
[ ${#reject[@]} -gt 0 ] && rejected "configs"
fi
